
BOARD STATE
  Hybrid approach: Piece list for move generation with separate board square representation for lookups.  
GAME TREE
  Position object used as node in search tree
  Evaluation score stored in node
  edges to other nodes generated based on move list.
SEARCHING / TRAVERSAL ----
  Iterative Deepening
    =>  MTD(f) for scope narrowing
        =>  Alpha-Beta Pruning with memoization
            =>  Transposition hash table for memoization
EVALUATION ----
  Material balance
  Mobility balance
  Piece Square Tables


Current Issues ----

Move Generation benchmarking (4-ply maximal tree, 197742 nodes)
  Using Location object - baseline: 46.596299 seconds
                          after refcatoring 12/30/13: 35.324076 seconds
                          after refactoring 1/5/14: 24.660283 seconds
                          after adding king safety 1/6/14: 25.213673 seconds
                          after ensuring legal move generation: 33.068109 seconds
                          after switching to incremental update: 9.475452 seconds

To Do ----

  Add hashing of castling rights

  Add a Factory class to simplify Move module interface.

  Debug Static Exchange Evaluator 

  Refactor the TT probing logic into TT class, and call it from move_gen.

  Move ordering (priority high to low):
    -PV move
    -Hash Move
    -Killer Moves
    -Captures sorted by MVV-LVA
    -Non-captures sorted by History Heuristic

  Search extensions:
    -Principal Variation
    -checks
    -captures with MVV-LVA ratio greater than 1.5
    -pawn promotions

  Add separate PSTs for early- and late-game in Evaluation module.


  






