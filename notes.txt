
BOARD STATE
  Hybrid approach: Piece list for move generation with separate board square representation for lookups.  
GAME TREE DATA STRUCTURE
  Position object used as node in search tree
  Evaluation score stored in node
  edges to other nodes generated based on move list.
SEARCHING / TRAVERSAL ----
  Iterative Deepening
    =>  MTD(f) for scope narrowing
        =>  Alpha-Beta Pruning with memoization
            =>  Transposition hash table for memoization
EVALUATION ----
  Weighted pattern matching

Current Issues ----

  AI does not always select obvious best moves - does not always capture expensive units except via pawns.



Move Generation benchmarking (4-ply maximal tree, 197742 nodes)

  Using Location object - baseline: 46.596299 seconds
                          after refcatoring: 35.324076 seconds



To Do ----
  
  Lazy move generation - generate all moves for a node, but only create positions as needed.  This will avoid creating positions for nodes that will never be inspected due to alpha-beta cutoffs.

  Add separate PSTs for early- and late-game.
  Handle king_in_check? in board object
  Add Killer Heuristic to move ordering.
  Allow incremental calculation of hash values based on previous move of the Transposition Table.












