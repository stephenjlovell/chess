
BOARD STATE

  Hybrid approach: Piece list for move generation with separate board square representation for lookups.  

DATA STRUCTURE

  Directed Acyclic Graph
    Position object passed to node generator.
    Evaluation score stored in node
    edges to other nodes generated based on move list.

SEARCHING / TRAVERSAL ----

  Iterative Deepening Depth-First Search (IDDFS)
    =>  MTD(f) for scope narrowing (optional)
        =>  Alpha-Beta Pruning with memoization
            =>  Transposition hash table for memoization

EVALUATION ----

  Weighted pattern matching

Current Issues ----

  Castling - could handle this in the movement module or the Rook class.  Will need to store info in Position object.

  Move::Coordinates is somehow getting rows/columns reversed.


To Do ----

  come up with approach for castling
  Add half-move clock (turn timer) to Application::Game.
  Create full-turn counter in Application::Game
  in places where position pairs are passed as integer arguments, use *arr to explode arr into args













